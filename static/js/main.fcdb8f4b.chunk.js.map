{"version":3,"sources":["components/Toggle.js","components/Navbar.js","components/MovieCard.js","contexts/MovieContext.js","components/Search.js","components/Details.js","App.js","index.js"],"names":["initialState","JSON","parse","localStorage","getItem","Toggle","props","useState","checkBox","setCheckBox","useEffect","setItem","stringify","className","type","checked","onChange","prevState","toggleMode","Navbar","MovieCard","movie","to","id","src","poster_path","alt","title","release_date","vote_average","MovieContext","createContext","MovieContextProvider","movies","setMovies","Provider","value","children","Search","query","setQuery","useContext","handleSubmit","e","a","preventDefault","url","fetch","response","json","data","results","console","error","onSubmit","name","placeholder","target","required","filter","map","Details","match","params","String","overview","App","darkMode","setDarkMode","prevDarkMode","exact","path","component","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcdb8f4b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { FiSun, FiMoon } from 'react-icons/fi'\r\nimport '../App.css'\r\n\r\nconst initialState = false || JSON.parse(localStorage.getItem('checkbox'))\r\n\r\nconst Toggle = (props) => {\r\n    const [checkBox, setCheckBox] = useState(initialState)\r\n\r\n    const toggleDarkMode = () => {\r\n        setCheckBox(prevState => !prevState)\r\n        props.toggleMode()\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('checkbox', JSON.stringify(checkBox))\r\n    }, [checkBox])\r\n\r\n    return (\r\n        <div className=\"toggles\">\r\n            <label>\r\n                <input className='toggle-checkbox' type='checkbox' checked={checkBox} onChange={toggleDarkMode}></input>\r\n                <div className='toggle-slot'>\r\n                    <div className='sun-icon-wrapper'>\r\n                        <FiSun className=\"iconify sun-icon\" />\r\n                    </div>\r\n                    <div className='toggle-button'></div>\r\n                    <div className='moon-icon-wrapper'>\r\n                        <FiMoon className=\"iconify moon-icon\"/>\r\n                    </div>\r\n                </div>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toggle\r\n","import React from 'react'\r\nimport Toggle from './Toggle'\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <h1>Movie Search App</h1>\r\n            <Toggle toggleMode={props.toggleMode}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst MovieCard = (props) => {\r\n    const { movie } = props\r\n    return (\r\n        <Link to={`/movieSearchApp/${movie.id}`}>\r\n            <div className=\"card\">\r\n                <img \r\n                    className=\"card-image\" \r\n                    src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`} \r\n                    alt={`${movie.title} poster`} \r\n                />\r\n                <div className=\"card-content\">\r\n                    <h3 className=\"card-title\">{movie.title}</h3>\r\n                    <p><small>Release Date: {movie.release_date}</small></p>\r\n                    <p><small>Rating: {movie.vote_average}</small></p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <span>Read More...</span>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MovieCard\r\n","import React, { useState, createContext } from 'react'\r\n\r\nexport const MovieContext = createContext()\r\n\r\nconst MovieContextProvider = (props) => {\r\n    const [movies, setMovies] = useState([])\r\n    return (\r\n        <MovieContext.Provider value={{movies, setMovies}}>\r\n            {props.children}\r\n        </MovieContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MovieContextProvider\r\n","import React, { useState, useContext } from 'react'\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport MovieCard from './MovieCard'\r\nimport { MovieContext } from '../contexts/MovieContext'\r\n\r\nconst Search = (props) => {\r\n    const [query, setQuery] = useState(\"\")\r\n    const { movies, setMovies } = useContext(MovieContext)\r\n\r\n    const handleChange = (e) => {\r\n        setQuery(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=d39b7df4f1b76fb7df1d1abddbe3ada8&language=en-US&query=${query}&page=1&include_adult=false`;\r\n        try{\r\n            const response = await fetch(url)\r\n            const data = await response.json()\r\n            setMovies(data.results)\r\n        }catch(err){\r\n            console.error(err)\r\n        }\r\n        setQuery(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit} className=\"searchForm\">\r\n                <input type=\"text\" className=\"input\" value={query} name=\"query\" placeholder=\"i.e. Jurassic Park...\" onChange={handleChange} required />\r\n                <input type=\"submit\" className=\"button\" value=\"\"/>\r\n                <FiSearch className=\"searchIcon\" />\r\n            </form>\r\n            <div className=\"card-list\">\r\n                {movies && movies.filter(movie => movie.poster_path).map(movie => {\r\n                    return <MovieCard key={movie.id} movie={movie} />\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MovieContext } from '../contexts/MovieContext'\r\n\r\nconst Details = (props) => {\r\n    const id = props.match.params.id\r\n    const { movies } = useContext(MovieContext)\r\n    return (\r\n        <div className=\"card-details\">\r\n            {movies.filter(movie => String(movie.id) === String(id)).map(movie => (\r\n                <div key={movie.id} className=\"details\">\r\n                    <div className=\"left\">\r\n                        <img \r\n                            className=\"card-images\" \r\n                            src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`} \r\n                            alt={`${movie.title} poster`} \r\n                        />\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <h2>{movie.title}</h2>\r\n                        <small>Release Date: {movie.release_date}</small><br/>\r\n                        <small>Rating: {movie.vote_average}</small>\r\n                        <p>{movie.overview}</p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <div className=\"card-footer\">\r\n                <Link to=\"/movieSearchApp\">Go Back</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Search from './components/Search'\nimport Details from './components/Details'\nimport MovieContextProvider from './contexts/MovieContext'\n\nconst initialState = false || JSON.parse(localStorage.getItem('theme'))\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState(initialState)\n  \n  const toggleMode = () => {\n    setDarkMode(prevDarkMode => !prevDarkMode)\n  }\n\n  useEffect(() => {\n    localStorage.setItem('theme', JSON.stringify(darkMode))\n  }, [darkMode])\n\n  return (\n    <div className={darkMode ? \"dark-mode container\" : \"light-mode container\"}>\n      <Router>\n        <Navbar toggleMode={toggleMode}/>\n        <Switch>\n          <MovieContextProvider >\n            <Route exact path=\"/movieSearchApp\" component={Search} />\n            <Route path=\"/movieSearchApp/:id\" component={Details} />\n          </MovieContextProvider>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n\n","import React from \"react\"\nimport { render } from \"react-snapshot\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nrender(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}